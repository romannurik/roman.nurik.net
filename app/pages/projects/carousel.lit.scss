@import '@app/shared';

:host {
  --page-peek: 32px;
  --page-spacing: 16px;
  display: flex;
  width: 500px; // defaults
  height: 400px;
  position: relative;
}

.scroller {
  overflow-x: scroll;
  scroll-snap-type: x mandatory;
  display: flex;
  flex-direction: row;

  &::before,
  &::after {
    content: '';
    width: calc(var(--page-peek) + var(--page-spacing) / 2);
    flex: 0 0 auto;
    display: block;
  }
}

::slotted(rn-carousel-page) {
  scroll-snap-align: center;
  width: calc(var(--width, 500px) - var(--page-peek) * 2 - var(--page-spacing) * 2);
  height: 100%;
  flex: 0 0 auto;
  margin: 0 calc(var(--page-spacing) / 2);
}

.edge {
  appearance: none;
  border: 0;
  content: '';
  cursor: pointer;
  display: block;
  position: absolute;
  overflow: hidden;
  top: 0;
  bottom: 0;
  background: transparent none repeat-y;
  width: calc(var(--page-peek) + var(--page-spacing));
  padding: 0;
  z-index: 1;
  transition: opacity .1s ease;
  outline: 0;

  &[disabled] {
    opacity: 0;
    cursor: default;
  }

  svg {
    filter: drop-shadow(0 0 8px rgba(#000, .2));
  }

  .shade {
    position: absolute;
    left: -16px;
    top: 0;
    height: 100%;
    width: 16px;
  }

  .button-indent {
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
  }

  .material-icons {
    position: absolute;
    left: -4px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--on-color-secondary);
  }

  &:hover,
  &:focus,
  &:active {
    svg {
      filter: drop-shadow(0 0 8px rgba(#000, .3));
    }

    .material-icons {
      color: var(--accent-color);
    }
  }
}

.edge.prev {
  left: 0;
}

.edge.next {
  right: 0;
  transform: rotate(180deg);
}

.dots {
  --page-dot-size: 8px;
  --page-dot-padding: 4px;
  position: absolute;
  left: 0;
  height: calc(var(--page-dot-size) + var(--page-dot-padding) * 2);
  right: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  flex-direction: row;
  margin: 0 auto;

  $pageDotColor: var(--on-color-tertiary);

  .dot {
    position: relative;
    width: var(--page-dot-size);
    height: var(--page-dot-size);

    display: block;
    padding: var(--page-dot-padding);
    cursor: pointer;

    &::after {
      content: '';
      display: block;
      box-shadow: 0 0 0 1px $pageDotColor inset;
      border-radius: 50%;
      position: absolute;
      left: var(--page-dot-padding);
      top: var(--page-dot-padding);
      right: var(--page-dot-padding);
      bottom: var(--page-dot-padding);
      transition: box-shadow .2s ease;
    }

    &.is-active::after {
      box-shadow: 0 0 0 calc(var(--page-dot-size) / 2) $pageDotColor inset;
    }
  }
}